import extras
import parser
from types import Node, Frame, Vector3, Bone

exmpl_string = "bind \"ins\" \"bot_place\""
exmpl_Node_line = '80 "ValveBiped.weapon_bone" 40'
exmpl_Vector3_list = [1.589269, -0.002248, -3.139385]
exmpl_Bone_line = '71 -3.771435 0.913481 -3.694230 1.917776 0.402490 3.081270'
exmpl_Nodes = """  0 "pelvis" -1
  1 "lean_root" -1
  2 "cam_driver" -1
  3 "spine_0" 0
  4 "spine_1" 3
  5 "spine_2" 4'
  end
  """
exmpl_bones_in_frame = """
    0 5.062500 0.633301 39.250000 1.256568 -1.503796 1.182263
    1 0.000000 0.000000 0.000000 0.000000 0.000000 -1.570796
    2 0.000000 0.000000 64.000000 0.000000 0.000000 -1.570796
    3 0.934204 0.090506 0.000000 -0.009382 -0.030960 0.191469
    4 3.972656 0.000000 0.000000 -0.039609 -0.042712 0.042174
    5 4.679688 0.000001 -0.000001 -0.025308 -0.023961 0.102416
    6 6.269531 -0.000001 0.000000 -0.018084 -0.000019 0.237471
    7 6.167969 -0.000013 -0.000001 -0.014406 -0.023328 0.328372
    8 5.886719 0.497070 0.147217 0.548143 0.181643 -0.374552
    9 4.311546 3.005295 1.270492 1.592262 -1.105839 -2.040944
    10 6.665431 -0.000001 0.000004 0.526138 -0.976811 0.204560
    11 11.596657 0.000000 0.000004 0.000000 0.000000 1.601422
    12 11.486958 0.000000 0.000000 0.218244 0.171964 0.188424
    13 0.807848 0.015446 -0.224507 0.015190 -0.100022 -0.199253
    14 3.265085 0.000000 0.000000 0.046941 -0.019754 0.499070
    15 2.075729 0.000000 0.000000 0.035169 0.075898 0.331553
    16 1.413418 0.000000 0.000000 0.073807 0.230971 1.028346
    17 0.562845 0.124916 0.989242 0.032932 -0.223508 0.013889
    18 2.704880 0.000004 0.000000 -0.423512 0.017290 0.087774
    19 1.511139 0.000000 0.000000 0.002002 -0.017415 0.531599
    20 0.872662 -0.000002 0.000000 -0.002495 -0.043308 0.164426
    21 0.802790 0.214909 -0.873657 0.154979 0.051327 -0.220192
    22 3.290375 -0.000008 -0.000001 0.013938 0.021579 0.357193
    23 1.995686 0.000002 0.000000 -0.001079 0.006683 -0.010670
    24 1.269020 0.000002 0.000000 -0.010429 -0.025894 0.449990
    25 1.423082 0.741592 -1.176399 2.352691 0.765170 0.550119
    26 1.698860 0.000000 -0.000002 -0.010007 -0.077259 0.343139
    27 1.566334 0.000003 0.000004 0.012468 0.068262 0.393012
    28 0.711742 0.057613 0.410461 0.021066 -0.174537 -0.109958
    29 2.987720 0.000004 0.000000 -0.108133 0.089075 0.346122
    30 1.910923 0.000002 0.000000 0.000157 0.001204 0.398150
    31 1.280708 0.000000 0.000000 0.006394 0.011855 0.712193
    32 5.546875 0.840332 -1.900391 0.170754 0.494346 -3.130337
    33 3.828991 -0.000002 -0.000004 -0.657400 0.000000 0.000000
    34 7.657978 -0.000001 -0.000004 -1.314800 0.000000 0.000000
    35 3.865551 0.000000 0.000000 0.233691 0.000000 0.000000
    36 7.731106 0.000005 0.000000 0.116846 0.000000 0.000000
    37 4.311554 3.005295 -1.270490 1.552562 -1.351151 1.754690
    38 -6.304688 -0.000002 0.000000 -2.635781 0.443093 -1.698451
    39 11.596647 -0.000001 0.000000 -1.570804 0.000010 -1.993353
    40 11.486992 0.000004 0.000000 2.570082 0.437623 -3.054605
    41 -0.807779 -0.015434 0.224528 0.103566 -0.098441 -0.078206
    42 -3.265091 -0.000004 -0.000001 -0.249770 -0.087866 1.199460
    43 -2.075771 0.000034 -0.000016 0.374393 -0.070713 1.418982
    44 -1.413406 0.000010 -0.000004 0.001356 0.178658 0.588564
    45 -0.562851 -0.124878 -0.989245 -0.013803 -0.343873 0.088648
    46 -2.704903 -0.000004 0.000000 -0.192722 -0.052174 1.004716
    47 -1.511091 -0.000008 -0.000013 0.116468 -0.042930 1.096013
    48 -0.872673 -0.000025 0.000009 -0.072179 -0.142573 0.882050
    49 -0.802757 -0.214920 0.873666 0.222820 0.123451 -0.042596
    50 -3.290358 0.000015 0.000001 0.022015 0.034554 0.460740
    51 -1.995712 0.000071 -0.000041 -0.133248 0.198452 1.070660
    52 -1.268997 -0.000080 0.000054 -0.019585 0.004466 1.252857
    53 -1.423065 -0.741619 1.176403 2.698698 0.107598 1.192686
    54 -1.698807 0.000021 -0.000074 0.268482 -0.160906 0.968332
    55 -1.566315 0.000017 0.000042 0.099726 0.056735 0.555475
    56 -0.711685 -0.057610 -0.410448 0.066853 -0.215308 -0.019739
    57 -2.987783 0.000034 -0.000010 -0.087636 -0.055818 1.213896
    58 -1.910938 -0.000069 0.000009 0.083448 0.010728 1.382200
    59 -1.280685 0.000078 -0.000007 0.006952 0.011919 0.759751
    60 -3.097656 -1.580078 0.022552 0.000000 0.000000 -3.141593
    61 3.828999 0.000004 0.000002 1.322352 -0.001773 -3.139314
    62 7.658009 0.000004 0.000000 1.073910 -0.001598 -3.138909
    63 3.865543 -0.000002 0.000004 -2.931282 -0.003333 3.141241
    64 7.731091 -0.000004 0.000008 -3.036437 0.003378 -3.141415
    65 -3.771385 0.913481 3.694230 -0.200047 -0.297232 2.734899
    66 17.902937 -0.000001 0.000000 0.000000 0.000000 0.651281
    67 16.937243 0.000000 0.000001 2.990505 0.089174 -1.195321
    68 6.329629 -0.000003 0.000000 0.000000 0.000000 0.500448
    69 5.967648 0.000002 0.000000 0.057642 0.000000 0.000000
    70 11.935293 0.000001 0.000000 0.028821 0.000000 0.000000
    71 -3.771435 0.913481 -3.694230 1.917776 0.402490 3.081270
    72 17.902927 0.000000 0.000000 0.000000 0.650639 0.000000
    73 16.937195 0.000000 0.000000 -2.558411 1.351554 2.559878
    74 -6.329633 -0.000003 0.000002 0.000000 0.000000 0.500448
    75 5.967648 0.000001 0.000000 1.607745 -0.002378 -3.139301
    76 11.935293 -0.000001 0.000000 1.589269 -0.002248 -3.139385
    77 0.000000 0.000000 0.000001 0.000000 0.000000 0.000000
    78 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
    79 -0.000002 0.000000 0.000000 0.000000 0.000000 0.000000
    80 -4.440264 -6.353600 -5.421589 -0.130881 0.227548 2.823843
    81 -4.440269 -6.353603 -5.421588 -0.130881 0.227548 2.823843
    82 -4.440266 -6.353603 -5.421586 -0.130881 0.227548 2.823843
    83 -4.440262 -6.353600 -5.421586 -0.130881 0.227548 2.823843
    84 -6.999998 -2.000000 2.500000 1.919862 0.000000 -1.570796
"""


def test_readfile_simple():
    filepath = extras.get_filepath("small_file.txt")
    fp = open(filepath, "rt")
    text = fp.read()
    fp.close()
    assert text == "bind \"ins\" \"bot_place\""


def test_node_builder():
    node1 = Node.from_text(exmpl_Node_line)
    assert node1.node_id == 80
    assert node1.name == '"ValveBiped.weapon_bone"'
    assert node1.parent_id == 40


def test_Vector3_builder():  # '1.589269 -0.002248 -3.139385'
    vector = Vector3.from_list(exmpl_Vector3_list)
    assert vector.x == 1.589269
    assert vector.y == -0.002248
    assert vector.z == -3.139385


def test_Bone_builder():  # '71 -3.771435 0.913481 -3.694230 1.917776 0.402490 3.081270'
    bone = Bone.from_text(exmpl_Bone_line)
    assert bone.bone_id == 71
    assert bone.position == Vector3.from_list([-3.771435, 0.913481, -3.694230])
    assert bone.rotation == Vector3.from_list([1.917776, 0.402490, 3.081270])


def test_Frame_builder():
    filepath = extras.get_filepath("smd_first_file.txt")
    bones = [Bone.from_text(line.strip()) for line in exmpl_bones_in_frame.strip()]
    frame = Frame.from_file(1, bones)
    assert frame.frame_time == 1
    assert frame.bones[3].position.y == 0.090506


def test_parse_nodes():
    filepath = extras.get_filepath("small_file.txt")
    assert parser.parse_nodes(filepath)[0] == Node.from_text('0  "pelvis" -1')


def test_parse_frames():
    filepath = extras.get_filepath("medium_file.txt")
    assert parser.parse_frames(filepath)[0]
    assert parser.parse_nodes(filepath)[0] == Node.from_text('0  "pelvis" -1')
